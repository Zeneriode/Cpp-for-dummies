// Copyright 2022 Zener
// Created by Zener on 7/14/2022.
//

#include <iostream>

/// В С++ переменные могут сохранять разные формы чисел, а также разный диапазон
/// Тут также есть распределение, которое нам помогает работать
/// только с положительными числами
void signed_unsigned() {
    // обычно, чтобы использовать переменную, мы пишем её тип и название

    // простая переменная,
    // которая может сохранять числа от -2,147,483,648 до 2,147,483,647
    int a = -1;

    // До этого была переменная,
    // которая также учитывает знак у числа, но мы можем это игнорировать

    // Это переменная, которая может сохранять числа от 0 до 4,294,967,295
    unsigned int b = 2147483648;

    /* разница в том, что в первом случае 1 бит памяти выделяется для сохранения знака числа
     * Но unsigned переменная использует этот бит, чтобы сохранить число */

    // Есть также пример с char,
    // который может сохранять символ с номером от 0 до 255
    unsigned char c = 65;  // 'a'
}


/// Простые арифметические действия с числами
void arithmetic() {
    int a = 1, b = 5;
    float f = 4.2;

    std::cout << "Сложение 1 и 5: " << a + b << std::endl;
    std::cout << "Вычитание 1 и 5: " << a - b << std::endl;
    std::cout << "Умножение 1 и 5: " << a * b << std::endl;
    std::cout << "Деление 1 и 5: " << a / b << std::endl;

    // Желательно переводить все переменные в один тип перед операцией
    std::cout << "Сложение 1 и 4.2: "
              << static_cast<float>(a) + f
              << std::endl;
    std::cout << "Вычитание 1 и 4.2: "
              << static_cast<float>(a) - f
              << std::endl;
    std::cout << "Умножение 1 и 4.2: "
              << static_cast<float>(a) * f
              << std::endl;
    std::cout << "Деление 1 и 4.2: "
              << static_cast<float>(a) / f
              << std::endl;

    // Так как символы сохранены как номера, мы можем это использовать
    std::cout << "Вместо a мы получили: " << 'a' + 1 << std::endl;  // 'b'

    // Ну и также мы можем сравнивать числа друг с другом
    std::cout << "Число а больше b? " << (a > b) << std::endl;             // 0
    std::cout << "Число а меньше b? " << (a < b) << std::endl;             // 1
    std::cout << "Число а больше или равно b? " << (a >= b) << std::endl;  // 0
    std::cout << "Числа а и b равны? " << (a == b) << std::endl;           // 0
    std::cout << "Числа а и b не равны? " << (a != b) << std::endl;        // 1
}
